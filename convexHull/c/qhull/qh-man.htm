<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<title>Qhull manual</title>
<!-- Navigation links 
NOTE -- verify all links by 'grep href=' 'grep name=' add # 'sort /+7'
-->
</head>

<body>

<p><a name="TOP"><b>Up:</b></a> <a
href="http://www.geom.umn.edu/locate/qhull">Home page for Qhull</a>
<br>
<b>To:</b> <a href="#TOC">Table of Contents</a> (please wait
while loading) <br>
<b>To:</b> <a href="#synopsis">Synopsis of Qhull</a> (please wait
while loading) <b><br>
Dn:</b> <a href="qh-opt.htm">Options for using Qhull</a><br>
<b>Dn:</b> <a href="qh-rbox.htm">Rbox, Qhull's input generator</a><br>
<b>Dn:</b> <a href="qh-impre.htm">Imprecision in Qhull</a><br>
<b>Dn:</b> <a href="qh-eg.htm">Description of Qhull examples</a><br>
<b>Dn:</b> <a href="qh-in.htm">Qhull internals</a></p>

<hr>
<!-- Main text of document -->
<h1><a
href="http://www.geom.umn.edu/graphics/pix/Special_Topics/Computational_Geometry/4dcube.html"><img
src="qh--4d.gif" alt="[4-d cube]" align="middle" width="100"
height="100"></a> Qhull manual </h1>

<p>Qhull is a general dimension code for computing convex hulls,
Delaunay triangulations, halfspace intersections, Voronoi regions
and vertices, furthest-site Delaunay triangulations, and
furthest-site Voronoi regions and vertices. These structures have
applications in science, engineering, statistics, and
mathematics. For a detailed introduction, see O'Rourke [<a
href="#orou94">'94</a>]. </p>

<p>Qhull implements the Quickhull algorithm for computing the
convex hull. Qhull handles roundoff errors from floating point
arithmetic. It can approximate a convex hull. It includes options
for hull volume, facet area, multiple output formats, and
graphical output (<a href="#geomview">Geomview</a>). </p>

<p><i>Brad Barber, Cambridge MA, April 14, 1997</i></p>

<p><b>Copyright © 1995, 1997 The Geometry Center, Minneapolis MN</b></p>

<hr>

<h2><a href="#TOP">»</a><a name="TOC">Qhull manual: Table of
Contents </a></h2>

<ul>
    <li><a href="#synopsis">Synopsis</a> of Qhull</li>
    <li><a href="#when">When</a> to use Qhull</li>
    <li><a href="#description">Description</a> of Qhull<ul>
            <li><a href="#definition">de</a>finition &#149; <a
                href="#input">in</a>put &#149; <a href="#output">ou</a>tput
                &#149; <a href="#algorithm">al</a>gorithm &#149; <a
                href="#structure">da</a>ta structure </li>
        </ul>
    </li>
    <li><a href="qh-impre.htm">Imprecision</a> in Qhull</li>
    <li><a href="qh-rbox.htm">Rbox</a>, Qhull's input generator</li>
    <li><a href="#geomview">Geomview</a>, Qhull's graphical
        viewer</li>
    <li><a href="qh-eg.htm">Examples</a> of Qhull </li>
    <li><a href="qh-opt.htm">Options</a> for using Qhull <ul>
            <li><a href="qh-opt.htm#opt">Main</a> options<ul>
                    <li><a href="qh-opt.htm#convex">Convex hull</a></li>
                    <li><a href="qh-opt.htm#H">Halfspace
                        intersection</a></li>
                    <li><a href="qh-optv.htm#d">Delaunay
                        triangulation</a></li>
                    <li><a href="qh-optv.htm#v">Voronoi vertices
                        and regions</a></li>
                    <li><a href="qh-optv.htm#dQu">Furthest-site
                        Delaunay triangulation</a></li>
                    <li><a href="qh-optv.htm#vQu">Furthest-site
                        Voronoi vertices</a></li>
                </ul>
            </li>
            <li><a href="qh-opto.htm#output">Output</a> formats</li>
            <li><a href="qh-optf.htm#format">Additional</a> I/O
                formats</li>
            <li><a href="qh-optg.htm#geomview">Geomview</a>
                output options</li>
            <li><a href="qh-optp.htm#print">Print</a> options</li>
            <li><a href="qh-optq.htm#qhull">Qhull</a> control
                options</li>
            <li><a href="qh-optc.htm#prec">Precision</a> options</li>
            <li><a href="qh-optt.htm#trace">Trace</a> options</li>
        </ul>
    </li>
    <li><a href="qh-in.htm">Qhull internals</a><ul>
            <li><a href="qh-in.htm#performance">Performance</a>
                of Qhull</li>
            <li><a href="qh-in.htm#library">Calling</a> Qhull
                from your program</li>
            <li><a href="qh-in.htm#enhance">Enhancements</a> to
                Qhull</li>
        </ul>
    </li>
    <li><a href="#bugs">What to do</a> if something goes wrong</li>
    <li><a href="#email">Email</a></li>
    <li><a href="#authors">Authors</a></li>
    <li><a href="#ref">References</a></li>
    <li><a href="#acknowledge">Acknowledgments</a></li>
</ul>

<hr>

<p>&#149; <a href="#synopsis">Synopsis</a> &#149; <a
href="qh-opt.htm#opt">Main</a> &#149; <a
href="qh-opto.htm#output">Output</a> &#149; <a
href="qh-optf.htm#format">Formats</a> &#149; <a
href="qh-optg.htm#geomview">Geomview</a> &#149; <a
href="qh-optp.htm#print">Print</a> &#149; <a
href="qh-optq.htm#qhull">Qhull</a> &#149; <a
href="qh-optc.htm#prec">Precision</a> &#149; <a
href="qh-optt.htm#trace">Trace</a> &#149;</p>

<h2><a href="#TOC">»</a><a name="synopsis">Synopsis of Qhull</a></h2>

<p><i>Note: This manual is included with </i><a
href="http://www.geom.umn.edu/software/download/qhull.html"><i>Download
Qhull</i></a><i>.</i> </p>

<dl>
    <dt>Qhull computes the convex hull of a set of points</dt>
    <dd><a href="http://www.geom.umn.edu/locate/qhull">locate/qhull</a>
        - home page with hot list<br>
        <a href="README.txt">README</a> - installation
        instructions<br>
        <a href="COPYING.txt">COPYING</a> - copyright notice<br>
        <a href="REGISTER.txt">REGISTER </a>- registration<br>
        <a href="Changes.txt">Changes</a> - change history <br>
        <a href="qhull.txt">qhull.txt</a> - alphabetical list of
        options</dd>
    <dd>&nbsp;</dd>
    <dt><a href="#input">input</a> on stdin</dt>
    <dd>dimension, #points, point coordinates<br>
        first comment (non-numeric) is listed in the summary<br>
        halfspace: use dim plus one and put offsets after
        coefficients</dd>
    <dt>&nbsp;</dt>
    <dt><a href="qh-opt.htm#opt">main</a> options</dt>
    <dd><dl compact>
            <dt><a href="qh-optv.htm#d">d</a></dt>
            <dd>Delaunay triangulation by convex hull of
                paraboloid</dd>
            <dt><a href="qh-optv.htm#v">v</a></dt>
            <dd>Voronoi vertices and regions from Delaunay
                triangulation</dd>
            <dt><a href="qh-opt.htm#Hn">H1,1</a></dt>
            <dd>Halfspace intersection about [1,1,0,...] by polar
                duality</dd>
            <dt><a href="qh-optv.htm#dQu">d Qu</a></dt>
            <dd>Furthest-site Delaunay triangulation from upper
                convex hull </dd>
            <dt><a href="qh-optv.htm#vQu">v Qu</a></dt>
            <dd>Furthest-site Voronoi vertices and regions from
                furthest-site Delaunay </dd>
            <dt>.</dt>
            <dd>concise list of all options</dd>
            <dt>-</dt>
            <dd>one line descriptions of all options</dd>
        </dl>
    </dd>
    <dd>&nbsp;</dd>
    <dt><a href="qh-opto.htm#output">output</a> options (subset)</dt>
    <dd><dl compact>
            <dt><a href="qh-opto.htm#s">s</a></dt>
            <dd>summary of results (default)</dd>
            <dt><a href="qh-optf.htm#Ft">Ft</a></dt>
            <dd>triangulated output with centrums</dd>
            <dt><a href="qh-opto.htm#o">o</a></dt>
            <dd>OFF file format for facets or Voronoi regions</dd>
            <dt><a href="qh-opto.htm#i">i</a></dt>
            <dd>vertices incident to each facet</dd>
            <dt><a href="qh-opto.htm#n">n</a></dt>
            <dd>normals with offsets</dd>
            <dt><a href="qh-opto.htm#p">p</a></dt>
            <dd>vertex coordinates</dd>
            <dt><a href="qh-optf.htm#Fp">Fp</a></dt>
            <dd>halfspace intersection coordinates</dd>
            <dt><a href="qh-optf.htm#FA">FA</a></dt>
            <dd>compute total area and volume for summary</dd>
            <dt><a href="qh-optg.htm#G">G</a></dt>
            <dd>Geomview output (2-d, 3-d, and 4-d)</dd>
            <dt><a href="qh-opto.htm#m">m</a></dt>
            <dd>Mathematica output (2-d and 3-d)</dd>
            <dt><a href="qh-optt.htm#Tv">Tv</a></dt>
            <dd>verify result: structure, convexity, and point
                inclusion</dd>
            <dt><a href="qh-opto.htm#f">f</a></dt>
            <dd>print all fields of all facets</dd>
        </dl>
    </dd>
    <dd>&nbsp;</dd>
    <dt><a href="qh-eg.htm">example</a></dt>
    <dd><i>rbox 1000 s | qhull Tv s FA </i></dd>
</dl>

<h2><a href="#TOC">»</a><a name="when">When to use Qhull</a></h2>

<p>Qhull constructs convex hulls, Delaunay triangulations,
halfspace intersections, Voronoi regions and vertices,
furthest-site Delaunay triangulations, and furthest-site Voronoi
regions and vertices.</p>

<p>Qhull may be used for 2-d, 3-d, 4-d, and higher dimensions.
For example, a Pentium 166 computes the Delauny triangulation of
1000 points in 3-d in one CPU second. It computes the convex hull
of 25 cospherical points in 20-d in four CPU seconds. Memory and
time requirements increase rapidly with increasing dimension.</p>

<p>This is a big package with many options. It is one of the
fastest available. It is the only 3-d code that handles precision
problems due to floating point arithmetic. For example, it implements
the identity function for extreme points (see <a
href="qh-impre.htm">Imprecision in Qhull</a>). </p>

<p>If you need a short code for convex hull, Delaunay
triangulation, or Voronoi volumes consider Clarkson's <a
href="http://netlib.bell-labs.com/netlib/voronoi/hull.html">hull
program</a>. If you need 2-d Delaunay triangulations consider
Shewchuk's <a href="http://www.cs.cmu.edu/~quake/triangle.html">triangle
program</a>. It is much faster than Qhull. Both programs use
exact arithmetic. They are in <a
href="ftp://netlib.bell-labs.com/netlib/voronoi">ftp://netlib.bell-labs.com/netlib/voronoi</a>.
Qhull <a
href="http://www.geom.umn.edu/software/download/qhull.html">version
1.0</a> may also meet your needs. It is 1/5 the size of Version
2.1.</p>

<p>If you need exact arithmetic or simplicial Delaunay
triangulations try Clarkson's <a
href="http://netlib.bell-labs.com/netlib/voronoi/hull.html">hull
program</a> or Shewchuk's <a
href="http://www.cs.cmu.edu/~quake/triangle.html">triangle
program</a>. The later includes 2-d constrained triangulations. </p>

<p>If your problem is in high dimensions with non-simplicial
facets, try Fukuda's <tt>cdd</tt> program in <a
href="ftp://ifor13.ethz.ch/pub/fukuda/cdd/">ftp://ifor13.ethz.ch/pub/fukuda/cdd/
</a>. It is much faster than Qhull for these distributions. For
other implementations and related software see Amenta's <a
href="http://www.geom.umn.edu/locate/cglist">Directory of
Computational Geometry Software </a>, Erickson's <a
href="http://www.cs.duke.edu/~jeffe/compgeom/">Computational
Geometry Pages</a>, and the <a
href="http://www.cs.sunysb.edu/~algorith/major_section/1.6.shtml">Stony
Brook Algorithm Repository</a> on computational geometry. </p>

<p>For Voronoi diagrams, Qhull produces the Voronoi vertices of
each Voronoi region. In 2-d, it produces the Voronoi diagram. In
higher dimensions, adjacency information can be derived from
Qhull's data structures. Qhull computes furthest-site Voronoi
vertices and furthest-site Delaunay triangulations. Except for
spheres, Qhull is not suitable for the Delaunay triangulation of
a surface. </p>

<p>Qhull uses a general dimension data structure based on a list
of facets. If your problem is in 2-d or 3-d, a specialized data
structure may be faster. If you need 2-d Delaunay triangulations,
a bucketing approach may be faster. If you do not need the ridges
of a high-dimensional hull, halfspace intersection with bit
vectors may be much faster (see <tt>cdd</tt> above). </p>

<p>With floating point arithmetic, <a href="qh-impre.htm">precision</a>
problems can be severe. Qhull handles precision problems by
merging non-convex facets. Qhull produces a convex hull that
clearly contains all of the input points. The output is clearly
convex, but in higher dimensions (5-d and up with '<a
href="qh-optq.htm#Qx">Qx</a>'), a point could be outside of the
hull. </p>

<p>Qhull is not suitable for mesh generation of arbitrary
surfaces. You may use Qhull if the surface is completely visible
from an interior point (e.g., a star-shaped polyhedron). First,
project each site to a sphere that is centered at the interior
point. Then, compute the convex hull of the projected sites. The
facets of the convex hull correspond to a triangulation of the
surface. For mesh generation of arbitrary surfaces, see <a
href="http://www-users.informatik.rwth-aachen.de/~roberts/meshgeneration.html">Schneiders'
Finite Element Mesh Generation</a>.</p>

<p>As is, Qhull is not suitable for constrained Delaunay
triangulations. With a fair amount of work, you can write a
program that uses Qhull to add constraints by adding additional
points to the triangulation.</p>

<h2><a href="#TOC">»</a><a name="description">Description of
Qhull </a></h2>

<h3><a href="#TOC">»</a><a name="definition">definition</a></h3>

<p>Qhull is a convex hull program for 2-d, 3-d, 4-d, and higher
dimensions. It reads points from <tt>stdin</tt>, and outputs the
smallest convex set that contains the points to <tt>stdout</tt>
according to printout options. If <i>A</i> is the matrix of facet
normals and <i>b</i> is the vector of facet offsets, the convex
hull of a set of points satisfies <i>Ax+b&lt;=0</i>.</p>

<p>Qhull accounts for round-off error. It returns
&quot;thick&quot; facets defined by parallel hyperplanes. The
outer planes contain all input points (2-d, 3-d, or 4-d). The
inner planes exclude all output vertices. See <a
href="qh-impre.htm#imprecise">Imprecise convex hulls</a>.</p>

<p>Qhull may be used for the Delaunay triangulation or the
Voronoi vertices of a set of points. It may be used for the
intersection of halfspaces. </p>

<h3><a href="#TOC">»</a><a name="input">input format</a></h3>

<p>The input data on <tt>stdin</tt> consists of:</p>

<ul compact="COMPACT">
    <li>first line contains the dimension</li>
    <li>second line contains the number of input points</li>
    <li>remaining lines contain point coordinates</li>
</ul>

<p>The dimension and number of points can be reversed. Comments
and line breaks are ignored. Error reporting is better if there
is one point per line.</p>

<p>A comment starts with a non-numeric character and continues to
the end of line. The first comment is reported in summaries and
statistics. With multiple <tt>qhull</tt> commands, use option '<a
href="qh-optf.htm#FQ">FQ</a>' to place a comment in the output.</p>

<p><a href="#TOC">»</a><a name="output">output format</a></p>

<p>The default printout option is a short summary ('<a
href="qh-opto.htm#s">s</a>') to <tt>stdout</tt>. There are many
other output formats. You can list vertex incidences, vertices
and facets, vertex coordinates, or facet normals. You can view
Qhull objects with Geomview or Mathematica. You can print the
internal data structures. You can call Qhull from your
application (see <a href="qh-in.htm#library">Qhull library</a>).</p>

<p>Error messages and additional summaries ('<a
href="qh-opto.htm#s">s</a>') go to <tt>stderr</tt>. </p>

<p>See <a href="qh-opt.htm#TOC">Options</a>.</p>

<h3><a href="#TOC">»</a><a name="algorithm">algorithm</a></h3>

<p>Qhull implements the Quickhull algorithm for convex hull
[Barber et al. <a href="#bar-dob96">'96</a>]. This algorithm
combines the 2-d Quickhull algorithm with the <em>n</em>-d
beneath-beyond algorithm [c.f., Preparata &amp; Shamos <a
href="#pre-sha85">'85</a>]. It is similar to the randomized
algorithms of Clarkson and others [Clarkson &amp; Shor <a
href="#cla-sho89">'89</a>; Clarkson et al. <a href="#cla-meh93">'93</a>;
Mulmuley <a href="#mulm94">'94</a>]. For a demonstration, see <a
href="qh-eg.htm#how">How Qhull adds a point</a>. The main
advantages of Quickhull are output sensitive performance (in
terms of the number of extreme points), reduced space
requirements, and floating-point error handling. </p>

<h3><a href="#TOC">»</a><a name="structure">data structure</a></h3>

<p>The data structure produced by Qhull consists of vertices,
ridges, and facets. A <em>vertex</em> is a point of the input
set. A <em>ridge</em> is a set of <i>d</i> vertices and two
neighboring facets. For example in 3-d, a ridge is an edge of the
polyhedron. A <em>facet</em> is a set of ridges, a set of
neighboring facets, a set of incident vertices, and a hyperplane
equation. For <em>simplicial facets</em>, the ridges are defined
by the vertices and neighboring facets. When Qhull merges two
facets, it produces a non-simplicial facet. A <em>non-simplicial
facet</em> has more than d neighbors and may share more than one
ridge with a neighbor. </p>

<p>A facet has a geometric and topological orientation. A facet's
<em>hyperplane equation</em> determines its geometric
orientation. The facet is oriented correctly if the distance from
an interior point (qh interior_point) to the facet is negative. A
facet is <i>flipped</i> if the distance is positive. </p>

<p>For a simplicial facet, a facet's vertices and <tt>toporient</tt>
flag determines its topological orientation. The vertices are
sorted by decreasing id. Each neighbor is opposite the
corresponding vertex. Except for axis-parallel facets in 5-d and
higher, the topological orientation determines the geometric
orientation. </p>

<p>Ridges determine the topological orientation of a
non-simplicial facet. Each ridge has two facets. If you exchange
the facets, you reverse the orientation. </p>

<h2><a href="#TOC">»</a>Imprecision in Qhull</h2>

<p>See <a href="qh-impre.htm">Imprecision in Qhull</a>.</p>

<h2><a href="#TOC">»</a>Rbox, Qhull's input generator</h2>

<p>See <a href="qh-rbox.htm">Rbox</a>.</p>

<h2><a href="#TOC">»</a><a name="geomview">Geomview, Qhull's
graphical viewer</a></h2>

<p><a href="http://www.geom.umn.edu/locate/geomview">Geomview</a>
is an interactive geometry viewing program for SGI workstations,
NeXT workstations, and X-windows. It is available via anonymous
ftp from <a href="ftp://geom.umn.edu/pub/software/geomview">geom.umn.edu</a>.
Besides a 3-d viewer, it includes a 4-d viewer, an n-d viewer and
many features for viewing mathematical objects. You may need to
ftp <tt>ndview</tt> from the <tt>newpieces</tt> directory. </p>

<h2><a href="#TOC">»</a>Description of Qhull examples</h2>

<p>See <a href="qh-eg.htm">Examples</a>. Some of the examples
have <a
href="http://www.geom.umn.edu/graphics/pix/Special_Topics/Computational_Geometry/welcome.html">pictures
</a>.</p>

<h2><a href="#TOC">»</a>Options for using Qhull </h2>

<p>See <a href="qh-opt.htm">Options</a>.</p>

<h2><a href="#TOC">»</a>Qhull internals </h2>

<p>See <a href="qh-in.htm">Internals</a>.</p>

<h2><a href="#TOC">»</a><a name="bugs">What to do if something
goes wrong</a></h2>

<p>Please report bugs to <a
href="http://www.geom.umn.edu/software/qhull/qhull-bug-mail.html">qhull_bug@geom.umn.edu
</a>. Please report if Qhull crashes. Please report if Qhull
generates an &quot;internal error&quot;. Please report if Qhull
produces a poor approximate hull in 2-d, 3-d or 4-d.</p>

<p>If you do not understand something, try a small example. The <a
href="qh-rbox.htm">rbox</a> program is an easy way to generate
test cases. The <a href="#geomview">Geomview</a> program helps to
visualize the output from Qhull.</p>

<p>If Qhull does not compile, it is due to an incompatibility
between your system and ours. The first thing to check is that
your compiler is ANSI standard. Qhull produces a compiler error
if __STDC__ is not defined. You may need to set a flag (e.g.,
'-A' or '-ansi').</p>

<p>If Qhull compiles but crashes on the test case (rbox D4),
there's still incompatibility between your system and ours.
Sometimes it is due to memory management. This can be turned off
with qh_NOmem in mem.h. Please let us know if you figure out how
to fix these problems. </p>

<p>If you doubt the output from Qhull, add option '<a
href="qh-optt.htm#Tv">Tv</a>'. It checks that every point is
inside the outer planes of the convex hull. It checks that every
facet is convex with its neighbors. It checks the topology of the
convex hull.</p>

<p>Qhull should work on all inputs. It may report precision
errors if you turn off facet merging with option '<a
href="qh-optq.htm#Q0">Q0</a>'. This can get as bad as facets with
flipped orientation or two facets with the same vertices. You'll
get a long help message if you run into such a case. They are
easy to generate with <tt>rbox</tt>.</p>

<p>If you do find a problem, try to simplify it before reporting
the error. Try different size inputs to locate the smallest one
that causes an error. You're welcome to hunt through the code
using the execution trace ('<a href="qh-optt.htm#Tn">T4</a>') as
a guide. This is especially true if you're incorporating Qhull
into your own program. </p>

<p>When you report an error, please attach a data set to the end
of your message. Include the options that you used with Qhull,
the results of option '<a href="qh-optf.htm#FO">FO</a>', and any
messages generated by Qhull. This allows me to see the error for
myself. Qhull is maintained part-time. </p>

<h2><a href="#TOC">»</a><a name="email">Email</a></h2>

<p>Please send correspondence to Brad Barber at <a
href="http://www.geom.umn.edu/software/qhull/qhull-mail.html">qhull@geom.umn.edu
</a>and report bugs to <a
href="http://www.geom.umn.edu/software/qhull/qhull-bug-mail.html">qhull_bug@geom.umn.edu
</a>. Let me know how you use Qhull. If you mention it in a
paper, please send the reference and an abstract.</p>

<p>If you would like to get Qhull announcements (e.g., a new
version) and news (any bugs that get fixed, etc.), let us know
and we will add you to our mailing list. If you would like to
communicate with other Qhull users, I will add you to the
qhull_users alias. For Internet news about geometric algorithms
and convex hulls, look at comp.graphics.algorithms and
sci.math.num-analysis. For Qhull news look at <a
href="http://www.geom.umn.edu/~bradb/qhull-news.html">qhull-news.html</a>.</p>

<h2><a href="#TOC">»</a><a name="authors">Authors</a></h2>

<pre>  C. Bradford Barber                    Hannu Huhdanpaa
  bradb@geom.umn.edu                    hannu@geom.umn.edu
  
                    c/o The Geometry Center
                    University of Minnesota
                    1300 South Second Street, Suite 500
                    Minneapolis, MN 55454
</pre>

<h2><a href="#TOC">»</a><a name="acknowledge">Acknowledgments</a></h2>

<p>A special thanks to David Dobkin for his guidance. A special
thanks to Albert Marden, Victor Milenkovic, the Geometry Center,
and Harvard University for supporting this work.</p>

<p>The software was developed under National Science Foundation
grants NSF/DMS-8920161 and NSF-CCR-91-15793 750-7504. If you find
it useful, please let us know.</p>

<p>The Geometry Center is supported by grant DMS-8920161 from the
National Science Foundation, by grant DOE/DE-FG02-92ER25137 from
the Department of Energy, by the University of Minnesota, and by
Minnesota Technology, Inc.</p>

<h2><a href="#TOC">»</a><a name="ref">References</a></h2>

<p><a name="aure91">Aurenhammer</a>, F., &quot;Voronoi diagrams
-- A survey of a fundamental geometric data structure,&quot; <i>ACM
Computing Surveys</i>, 1991, 23:345-405. </p>

<p><a name="bar-dob96">Barber</a>, C. B., D.P. Dobkin, and H.T.
Huhdanpaa, &quot;The Quickhull Algorithm for Convex Hulls,&quot; <i>ACM
Transactions on Mathematical Software</i>, Vol. 22, No. 4 (Dec.
1996), p. 469-483 [<a
href="http://www.acm.org/pubs/toc/Abstracts/toms/235821.html">http://www.acm.org</a>;
included with Qhull]. </p>

<p><a name="cla-sho89">Clarkson</a>, K.L. and P.W. Shor,
&quot;Applications of random sampling in computational geometry,
II&quot;, <i>Discrete Computational Geometry</i>, 4:387-421, 1989</p>

<p><a name="cla-meh92">Clarkson</a>, K.L., K. Mehlhorn, and R.
Seidel, &quot;Four results on randomized incremental
construction,&quot; <em>Computational Geometry: Theory and
Applications</em>, vol. 3, p. 185-211, 1993.</p>

<p><a name="dob-kir90">Dobkin</a>, D.P. and D.G. Kirkpatrick,
&quot;Determining the separation of preprocessed polyhedra--a
unified approach,&quot; in <i>Proc. 17th Inter. Colloq. Automata
Lang. Program.</i>, in <i>Lecture Notes in Computer Science</i>,
Springer-Verlag, 443:400-413, 1990. </p>

<p><a name="fort93">Fortune, S.</a>, &quot;Computational
geometry,&quot; in R. Martin, editor, <i>Directions in Geometric
Computation</i>, Information Geometers, 47 Stockers Avenue,
Winchester, SO22 5LB, UK, ISBN 1-874728-02-X, 1993.</p>

<p><a name="mile93">Milenkovic, V.</a>, &quot;Robust polygon
modelling,&quot; Computer-Aided Design, vol. 25, p. 546-566,
September 1993.</p>

<p><a name="mulm94">Mulmuley</a>, K., <i>Computational Geometry,
An Introduction Through Randomized Algorithms</i>, Prentice-Hall,
NJ, 1994.</p>

<p><a name="orou94">O'Rourke</a>, J., <i>Computational Geometry
in C</i>, Cambridge University Press, 1994.</p>

<p><a name="pre-sha85">Preparata</a>, F. and M. Shamos, <i>Computational
Geometry</i>, Springer-Verlag, New York, 1985.</p>

<p>Qhull is available by anonymous ftp from geom.umn.edu. To
retrieve a copy: ftp geom.umn.edu, user: anonymous, cd
pub/software, get qhull.tar.Z, quit, uncompress qhull.tar.Z, tar
xf qhull.tar, cd qhull, make </p>
<!-- Navigation links -->
<hr>

<p><b>Up:</b> <a href="http://www.geom.umn.edu/locate/qhull">Home
page for Qhull</a> <br>
<b>To:</b> <a href="#TOC">Table of Contents</a> <br>
<b>To:</b> <a href="#synopsis">Synopsis of Qhull</a> <br>
<b>Dn:</b> <a href="qh-opt.htm">Options for using Qhull</a><br>
<b>Dn:</b> <a href="qh-rbox.htm">Rbox, Qhull's input generator</a><br>
<b>Dn:</b> <a href="qh-impre.htm">Imprecision in Qhull</a><br>
<b>Dn:</b> <a href="qh-eg.htm">Description of Qhull examples</a><br>
<b>Dn:</b> <a href="qh-in.htm">Qhull internals</a></p>
<!-- GC common information -->
<hr>

<p><a href="http://www.geom.umn.edu/"><img src="qh--geom.gif"
align="middle" width="40" height="40"></a><i>The Geometry Center
Home Page </i></p>

<p>Comments to: <a
href="http://www.geom.umn.edu/software/qhull/qhull-mail.html">qhull@geom.umn.edu
</a><br>
Created: Sept. 25, 1995 --- <!-- hhmts start --> Last modified: see top <!-- hhmts end --> </p>
</body>
</html>
